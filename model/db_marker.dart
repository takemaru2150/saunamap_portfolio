import 'dart:async';
import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:flutter/services.dart';
import 'package:sqflite/sqflite.dart' as sql;

/// データベース作成
class MarkerDatabase {
  static Future<void> createTables(sql.Database database) async {
    WidgetsFlutterBinding.ensureInitialized();
    await database.execute("""CREATE TABLE marker(
            id INTEGER PRIMARY KEY NOT NULL,
            lat DOUBLE NOT NULL,
            lng DOUBLE NOT NULL,
            facilityName TEXT NOT NULL,
            facilityType TEXT,
            saunaikitaiUrl TEXT,
            address TEXT,
            parking TEXT,
            tel TEXT,
            hpUrl TEXT,
            regularHoliday TEXT,
            businessHours TEXT,
            price TEXT,
            target TEXT,
            saunaikitaiCounter INTEGER,
            manSauna1Temp TEXT,
            manSauna1Capacity TEXT,
            manSauna2Temp TEXT,
            manSauna2Capacity TEXT,
            manSauna3Temp TEXT,
            manSauna3Capacity TEXT,
            manSauna4Temp TEXT,
            manSauna4Capacity TEXT,
            manSauna5Temp TEXT,
            manSauna5Capacity TEXT,
            manSauna6Temp TEXT,
            manSauna6Capacity TEXT,
            manSauna7Temp TEXT,
            manSauna7Capacity TEXT,
            manWater1Temp TEXT,
            manWater1Capacity TEXT,
            manWater2Temp TEXT,
            manWater2Capacity TEXT,
            manWater3Temp TEXT,
            manWater3Capacity TEXT,
            manWater4Temp TEXT,
            manWater4Capacity TEXT,
            manWater5Temp TEXT,
            manWater5Capacity TEXT,
            manWater6Temp TEXT,
            manWater6Capacity TEXT,
            manAufguss INTEGER,
            manAutoloyly INTEGER,
            manSelfloyly INTEGER,
            manGaikiyoku INTEGER,
            manChair INTEGER,
            womanSauna1Temp TEXT,
            womanSauna1Capacity TEXT,
            womanSauna2Temp TEXT,
            womanSauna2Capacity TEXT,
            womanSauna3Temp TEXT,
            womanSauna3Capacity TEXT,
            womanSauna4Temp TEXT,
            womanSauna4Capacity TEXT,
            womanSauna5Temp TEXT,
            womanSauna5Capacity TEXT,
            womanSauna6Temp TEXT,
            womanSauna6Capacity TEXT,
            womanWater1Temp TEXT,
            womanWater1Capacity TEXT,
            womanWater2Temp TEXT,
            womanWater2Capacity TEXT,
            womanWater3Temp TEXT,
            womanWater3Capacity TEXT,
            womanWater4Temp TEXT,
            womanWater4Capacity TEXT,
            womanAufguss INTEGER,
            womanAutoloyly INTEGER,
            womanSelfloyly INTEGER,
            womanGaikiyoku INTEGER,
            womanChair INTEGER,
            unisexSauna1Temp TEXT,
            unisexSauna1Capacity TEXT,
            unisexSauna2Temp TEXT,
            unisexSauna2Capacity TEXT,
            unisexSauna3Temp TEXT,
            unisexSauna3Capacity TEXT,
            unisexSauna4Temp TEXT,
            unisexSauna4Capacity TEXT,
            unisexSauna5Temp TEXT,
            unisexSauna5Capacity TEXT,
            unisexSauna6Temp TEXT,
            unisexSauna6Capacity TEXT,
            unisexWater1Temp TEXT,
            unisexWater1Capacity TEXT,
            unisexWater2Temp TEXT,
            unisexWater2Capacity TEXT,
            unisexWater3Temp TEXT,
            unisexWater3Capacity TEXT,
            unisexWater4Temp TEXT,
            unisexWater4Capacity TEXT,
            unisexAufguss INTEGER,
            unisexAutoloyly INTEGER,
            unisexSelfloyly INTEGER,
            unisexGaikiyoku INTEGER,
            unisexChair INTEGER,
            saunaikitaiImgUrl TEXT,
            manSauna1Tag1 TEXT,
            manSauna1Tag2 TEXT,
            manSauna1Tag3 TEXT,
            manSauna1Tag4 TEXT,
            manSauna1Tag5 TEXT,
            manSauna2Tag1 TEXT,
            manSauna2Tag2 TEXT,
            manSauna2Tag3 TEXT,
            manSauna2Tag4 TEXT,
            manSauna2Tag5 TEXT,
            manSauna3Tag1 TEXT,
            manSauna3Tag2 TEXT,
            manSauna3Tag3 TEXT,
            manSauna3Tag4 TEXT,
            manSauna3Tag5 TEXT,
            manSauna4Tag1 TEXT,
            manSauna4Tag2 TEXT,
            manSauna4Tag3 TEXT,
            manSauna4Tag4 TEXT,
            manSauna4Tag5 TEXT,
            manSauna5Tag1 TEXT,
            manSauna5Tag2 TEXT,
            manSauna5Tag3 TEXT,
            manSauna5Tag4 TEXT,
            manSauna5Tag5 TEXT,
            manSauna6Tag1 TEXT,
            manSauna6Tag2 TEXT,
            manSauna6Tag3 TEXT,
            manSauna6Tag4 TEXT,
            manSauna6Tag5 TEXT,
            manSauna7Tag1 TEXT,
            manSauna7Tag2 TEXT,
            manSauna7Tag3 TEXT,
            manSauna7Tag4 TEXT,
            manWater1Tag1 TEXT,
            manWater1Tag2 TEXT,
            manWater2Tag1 TEXT,
            manWater2Tag2 TEXT,
            manWater3Tag1 TEXT,
            manWater3Tag2 TEXT,
            manWater4Tag1 TEXT,
            manWater4Tag2 TEXT,
            manWater5Tag1 TEXT,
            manWater5Tag2 TEXT,
            manWater6Tag1 TEXT,
            womanSauna1Tag1 TEXT,
            womanSauna1Tag2 TEXT,
            womanSauna1Tag3 TEXT,
            womanSauna1Tag4 TEXT,
            womanSauna1Tag5 TEXT,
            womanSauna2Tag1 TEXT,
            womanSauna2Tag2 TEXT,
            womanSauna2Tag3 TEXT,
            womanSauna2Tag4 TEXT,
            womanSauna2Tag5 TEXT,
            womanSauna3Tag1 TEXT,
            womanSauna3Tag2 TEXT,
            womanSauna3Tag3 TEXT,
            womanSauna3Tag4 TEXT,
            womanSauna3Tag5 TEXT,
            womanSauna4Tag1 TEXT,
            womanSauna4Tag2 TEXT,
            womanSauna4Tag3 TEXT,
            womanSauna4Tag4 TEXT,
            womanSauna5Tag1 TEXT,
            womanSauna5Tag2 TEXT,
            womanSauna5Tag3 TEXT,
            womanSauna5Tag4 TEXT,
            womanSauna6Tag1 TEXT,
            womanSauna6Tag2 TEXT,
            womanWater1Tag1 TEXT,
            womanWater1Tag2 TEXT,
            womanWater2Tag1 TEXT,
            womanWater2Tag2 TEXT,
            womanWater3Tag1 TEXT,
            womanWater3Tag2 TEXT,
            womanWater4Tag1 TEXT,
            unisexSauna1Tag1 TEXT,
            unisexSauna1Tag2 TEXT,
            unisexSauna1Tag3 TEXT,
            unisexSauna1Tag4 TEXT,
            unisexSauna1Tag5 TEXT,
            unisexSauna2Tag1 TEXT,
            unisexSauna2Tag2 TEXT,
            unisexSauna2Tag3 TEXT,
            unisexSauna2Tag4 TEXT,
            unisexSauna2Tag5 TEXT,
            unisexSauna3Tag1 TEXT,
            unisexSauna3Tag2 TEXT,
            unisexSauna3Tag3 TEXT,
            unisexSauna3Tag4 TEXT,
            unisexSauna3Tag5 TEXT,
            unisexSauna4Tag1 TEXT,
            unisexSauna4Tag2 TEXT,
            unisexSauna4Tag3 TEXT,
            unisexSauna4Tag4 TEXT,
            unisexSauna4Tag5 TEXT,
            unisexSauna5Tag1 TEXT,
            unisexSauna5Tag2 TEXT,
            unisexSauna5Tag3 TEXT,
            unisexSauna5Tag4 TEXT,
            unisexSauna5Tag5 TEXT,
            unisexSauna6Tag1 TEXT,
            unisexSauna6Tag2 TEXT,
            unisexSauna6Tag3 TEXT,
            unisexSauna6Tag4 TEXT,
            unisexSauna6Tag5 TEXT,
            unisexWater1Tag1 TEXT,
            unisexWater1Tag2 TEXT,
            unisexWater2Tag1 TEXT,
            unisexWater2Tag2 TEXT,
            unisexWater3Tag1 TEXT,
            unisexWater3Tag2 TEXT,
            unisexWater4Tag1 TEXT,
            createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
          )
          """);
  }

  static Future<sql.Database> db() async {
    return sql.openDatabase(
      'marker.db',
      version: 1,
      onCreate: (sql.Database database, int version) async {
        await createTables(database);
      },
    );
  }
}

/// Json to Database
//JSONファイル読み込み
Future<String> loadAsset() async {
  return rootBundle.loadString('assets/json/data_tokyo.json');
}

//JSONをデータベースに登録
Future<void> insertMarkerToDB() async {
  final sql.Database db = await MarkerDatabase.db();
  List<dynamic> data2 = [];
  await loadAsset().then((String value) {
    String mapString = value;
    data2 = jsonDecode(mapString);
    print("jsonDecode メソッド-完了");
  });
  for (var data in data2) {
    db.insert(
      'marker', // table名
      data, // Map型
      conflictAlgorithm: sql.ConflictAlgorithm.replace,
    );
  }
  print("insertMarkerToDB 関数-完了");
}
